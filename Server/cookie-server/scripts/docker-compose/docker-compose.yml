services:
  db:
    image: postgres:14.3
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: CookieData
    ports:
      - 5460:5432
    profiles:
      - basic
  server:
    build:
      context: ../..
      dockerfile: ./Dockerfile
    ports:
      - 3000:3000
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: 1234
      DB_NAME: CookieData
    profiles:
      - core
  # for visualisation
  grafana:
    image: grafana/grafana
    restart: always
    ports:
      - 3001:3000
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning/datasources
    profiles:
      - analysis
  # backend for logs
  loki:
    image: grafana/loki
    restart: always
    ports:
      - 3100:3100
    profiles:
      - analysis
  # backend for traces
  tempo:
    image: grafana/tempo
    restart: always
    ports:
      - 3200:3200
    profiles:
      - analysis
  # backend for metrics
  prometheus:
    image: prom/prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    profiles:
      - analysis
  opentelemetry-collector:
    image: otel/opentelemetry-collector
    restart: always
    ports:
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4318:4318 # OTLP http receiver
      - 3003:3003 # OTLP http exporter
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    command: --config /etc/otel-collector-config.yml
    profiles:
      - analysis

volumes:
  grafana_config: {}
